buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.adarshr:gradle-test-logger-plugin:2.0.0'
        classpath 'ch.epfl.scala:gradle-bloop_2.12:1.4.3'
    }
}

plugins {
    id 'scala'
    id 'nebula.netflixoss' version '8.8.1'
    id 'cz.alenkacz.gradle.scalafmt' version '1.14.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://artifacts.netflix.net/oss-sonatype-staging/"
    }
}

apply plugin: 'application'
apply plugin: 'nebula.netflixoss'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'bloop'
apply plugin: 'com.adarshr.test-logger'

group = 'com.netflix.remoto'

configurations.all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    // Unclear why this is needed, otherwise https://github.com/gradle/gradle/issues/6750
    if (name.startsWith("incrementalScalaAnalysis")) {
        extendsFrom = []
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [ "-Ywarn-unused:imports", "-language:dynamics" ]
}

dependencies {
    compile 'org.scala-lang:scala-library:2.13.1'

    // Scala dependencies
    compile 'io.monix:monix_2.13:3.2.1'
    //compile 'com.twitter:finagle-core_2.13:20.4.1'
    //compile 'com.twitter:finagle-http_2.13:20.4.1'
    compile 'com.outr:scribe_2.13:2.7.12'
    compile 'com.outr:scribe-slf4j_2.13:2.7.12'
    compile 'com.lihaoyi:pprint_2.13:0.5.9'

    // Test Scala dependencies
    testCompile 'org.scalameta:munit_2.13:0.7.5'
}

applicationName = 'remoto'
mainClassName = 'remoto.Main'

// Print out full stack traces when tests fail
tasks.withType(Test) {
    testLogging {
        exceptionFormat = 'full'
    }
}

testlogger {
    showStandardStreams true
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '8'
    }
}
